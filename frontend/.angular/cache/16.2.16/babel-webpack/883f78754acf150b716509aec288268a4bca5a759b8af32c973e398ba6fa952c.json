{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { RegisterComponent } from './auth/register/register.component';\nimport { TaskListComponent } from './tasks/task-list/task-list.component';\nimport { TaskFormComponent } from './tasks/task-form/task-form.component';\nimport { AuthService } from './auth/auth.service';\nimport { TasksService } from './tasks/tasks.service';\nimport { AuthGuard } from './guards/auth.guard';\nimport { TokenInterceptor } from './interceptors/token.interceptor';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AppModule {\n  static {\n    this.ɵfac = function AppModule_Factory(t) {\n      return new (t || AppModule)();\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppModule,\n      bootstrap: [AppComponent]\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      providers: [AuthService, TasksService, AuthGuard, {\n        provide: HTTP_INTERCEPTORS,\n        useClass: TokenInterceptor,\n        multi: true\n      }],\n      imports: [BrowserModule, HttpClientModule, FormsModule, ReactiveFormsModule, RouterModule.forRoot([{\n        path: 'login',\n        component: LoginComponent\n      }, {\n        path: 'register',\n        component: RegisterComponent\n      }, {\n        path: 'tasks',\n        component: TaskListComponent,\n        canActivate: [AuthGuard]\n      }, {\n        path: 'tasks/new',\n        component: TaskFormComponent,\n        canActivate: [AuthGuard]\n      }, {\n        path: 'tasks/edit/:id',\n        component: TaskFormComponent,\n        canActivate: [AuthGuard]\n      }, {\n        path: '',\n        redirectTo: '/tasks',\n        pathMatch: 'full'\n      }, {\n        path: '**',\n        redirectTo: '/tasks'\n      }])]\n    });\n  }\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent, LoginComponent, RegisterComponent, TaskListComponent, TaskFormComponent],\n    imports: [BrowserModule, HttpClientModule, FormsModule, ReactiveFormsModule, i1.RouterModule]\n  });\n})();","map":{"version":3,"names":["BrowserModule","HttpClientModule","HTTP_INTERCEPTORS","FormsModule","ReactiveFormsModule","RouterModule","AppComponent","LoginComponent","RegisterComponent","TaskListComponent","TaskFormComponent","AuthService","TasksService","AuthGuard","TokenInterceptor","AppModule","bootstrap","provide","useClass","multi","imports","forRoot","path","component","canActivate","redirectTo","pathMatch","declarations","i1"],"sources":["C:\\Users\\RC BBB\\GoodApps Inc\\Angular v16\\FastTask\\frontend\\src\\app\\app.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { RegisterComponent } from './auth/register/register.component';\nimport { TaskListComponent } from './tasks/task-list/task-list.component';\nimport { TaskFormComponent } from './tasks/task-form/task-form.component';\nimport { AuthService } from './auth/auth.service';\nimport { TasksService } from './tasks/tasks.service';\nimport { AuthGuard } from './guards/auth.guard';\nimport { TokenInterceptor } from './interceptors/token.interceptor';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    TaskListComponent,\n    TaskFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot([\n      { path: 'login', component: LoginComponent },\n      { path: 'register', component: RegisterComponent },\n      { path: 'tasks', component: TaskListComponent, canActivate: [AuthGuard] },\n      { path: 'tasks/new', component: TaskFormComponent, canActivate: [AuthGuard] },\n      { path: 'tasks/edit/:id', component: TaskFormComponent, canActivate: [AuthGuard] },\n      { path: '', redirectTo: '/tasks', pathMatch: 'full' },\n      { path: '**', redirectTo: '/tasks' }\n    ])\n  ],\n  providers: [\n    AuthService,\n    TasksService,\n    AuthGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }"],"mappings":"AACA,SAASA,aAAa,QAAQ,2BAA2B;AACzD,SAASC,gBAAgB,EAAEC,iBAAiB,QAAQ,sBAAsB;AAC1E,SAASC,WAAW,EAAEC,mBAAmB,QAAQ,gBAAgB;AACjE,SAASC,YAAY,QAAQ,iBAAiB;AAE9C,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,cAAc,QAAQ,8BAA8B;AAC7D,SAASC,iBAAiB,QAAQ,oCAAoC;AACtE,SAASC,iBAAiB,QAAQ,uCAAuC;AACzE,SAASC,iBAAiB,QAAQ,uCAAuC;AACzE,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SAASC,YAAY,QAAQ,uBAAuB;AACpD,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,gBAAgB,QAAQ,kCAAkC;;;AAqCnE,OAAM,MAAOC,SAAS;;;uBAATA,SAAS;IAAA;EAAA;;;YAATA,SAAS;MAAAC,SAAA,GAFRV,YAAY;IAAA;EAAA;;;iBAVb,CACTK,WAAW,EACXC,YAAY,EACZC,SAAS,EACT;QACEI,OAAO,EAAEf,iBAAiB;QAC1BgB,QAAQ,EAAEJ,gBAAgB;QAC1BK,KAAK,EAAE;OACR,CACF;MAAAC,OAAA,GAvBCpB,aAAa,EACbC,gBAAgB,EAChBE,WAAW,EACXC,mBAAmB,EACnBC,YAAY,CAACgB,OAAO,CAAC,CACnB;QAAEC,IAAI,EAAE,OAAO;QAAEC,SAAS,EAAEhB;MAAc,CAAE,EAC5C;QAAEe,IAAI,EAAE,UAAU;QAAEC,SAAS,EAAEf;MAAiB,CAAE,EAClD;QAAEc,IAAI,EAAE,OAAO;QAAEC,SAAS,EAAEd,iBAAiB;QAAEe,WAAW,EAAE,CAACX,SAAS;MAAC,CAAE,EACzE;QAAES,IAAI,EAAE,WAAW;QAAEC,SAAS,EAAEb,iBAAiB;QAAEc,WAAW,EAAE,CAACX,SAAS;MAAC,CAAE,EAC7E;QAAES,IAAI,EAAE,gBAAgB;QAAEC,SAAS,EAAEb,iBAAiB;QAAEc,WAAW,EAAE,CAACX,SAAS;MAAC,CAAE,EAClF;QAAES,IAAI,EAAE,EAAE;QAAEG,UAAU,EAAE,QAAQ;QAAEC,SAAS,EAAE;MAAM,CAAE,EACrD;QAAEJ,IAAI,EAAE,IAAI;QAAEG,UAAU,EAAE;MAAQ,CAAE,CACrC,CAAC;IAAA;EAAA;;;2EAcOV,SAAS;IAAAY,YAAA,GAjClBrB,YAAY,EACZC,cAAc,EACdC,iBAAiB,EACjBC,iBAAiB,EACjBC,iBAAiB;IAAAU,OAAA,GAGjBpB,aAAa,EACbC,gBAAgB,EAChBE,WAAW,EACXC,mBAAmB,EAAAwB,EAAA,CAAAvB,YAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}