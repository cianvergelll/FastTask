{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TasksService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/api/tasks';\n  }\n  getAll() {\n    return this.http.get(this.apiUrl);\n  }\n  getById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  create(task) {\n    return this.http.post(this.apiUrl, task);\n  }\n  update(id, task) {\n    return this.http.put(`${this.apiUrl}/${id}`, task);\n  }\n  delete(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function TasksService_Factory(t) {\n      return new (t || TasksService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TasksService,\n      factory: TasksService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["TasksService","constructor","http","apiUrl","getAll","get","getById","id","create","task","post","update","put","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\RC BBB\\GoodApps Inc\\Angular v16\\FastTask\\frontend\\src\\app\\tasks\\tasks.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Task } from '../interfaces/task.interface';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TasksService {\r\n    private apiUrl = 'http://localhost:3000/api/tasks';\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAll(): Observable<Task[]> {\r\n        return this.http.get<Task[]>(this.apiUrl);\r\n    }\r\n\r\n    getById(id: number): Observable<Task> {\r\n        return this.http.get<Task>(`${this.apiUrl}/${id}`);\r\n    }\r\n\r\n    create(task: Task): Observable<Task> {\r\n        return this.http.post<Task>(this.apiUrl, task);\r\n    }\r\n\r\n    update(id: number, task: Task): Observable<Task> {\r\n        return this.http.put<Task>(`${this.apiUrl}/${id}`, task);\r\n    }\r\n\r\n    delete(id: number): Observable<void> {\r\n        return this.http.delete<void>(`${this.apiUrl}/${id}`);\r\n    }\r\n}"],"mappings":";;AAQA,OAAM,MAAOA,YAAY;EAGrBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,iCAAiC;EAEV;EAExCC,MAAMA,CAAA;IACF,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,IAAI,CAACF,MAAM,CAAC;EAC7C;EAEAG,OAAOA,CAACC,EAAU;IACd,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAO,GAAG,IAAI,CAACF,MAAM,IAAII,EAAE,EAAE,CAAC;EACtD;EAEAC,MAAMA,CAACC,IAAU;IACb,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAO,IAAI,CAACP,MAAM,EAAEM,IAAI,CAAC;EAClD;EAEAE,MAAMA,CAACJ,EAAU,EAAEE,IAAU;IACzB,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAO,GAAG,IAAI,CAACT,MAAM,IAAII,EAAE,EAAE,EAAEE,IAAI,CAAC;EAC5D;EAEAI,MAAMA,CAACN,EAAU;IACb,OAAO,IAAI,CAACL,IAAI,CAACW,MAAM,CAAO,GAAG,IAAI,CAACV,MAAM,IAAII,EAAE,EAAE,CAAC;EACzD;;;uBAvBSP,YAAY,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAZjB,YAAY;MAAAkB,OAAA,EAAZlB,YAAY,CAAAmB,IAAA;MAAAC,UAAA,EAFT;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}